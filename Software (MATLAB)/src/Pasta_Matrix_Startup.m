function Pasta_Matrix_Startup

%
%Pasta_Matrix_Startup.m - Vulintus, Inc.
%
%   PASTA_MATRIX_STARTUP launches the pasta matrix recording program. It 
%   sets default directories and creates the GUI.
%   
%   UPDATE LOG:
%   08/17/2022 - Drew Sloan - Subfunctions separated out from 
%       Pasta_Matrix.m
%


%% Set the default path for exported files.
temp = getenv('userprofile');                                               %Grab the current user's root directory.
handles.savepath = [temp '\Documents\Pasta Matrix Records\'];               %Create the expected default data path.
if ~exist(handles.savepath,'dir')                                           %If the default data path doesn't yet exist...
    mkdir(handles.savepath);                                                %Create the directory.
end
   
%% Create a matrix to hold the checked/unchecked value.
num_rows = 15;                                                              %Set the number of rows in the grid.
num_columns = 25;                                                           %Set the number of columns in the grid.
handles.checked = zeros(num_rows,num_columns);                              %Create a field to hold the checked/uncheck value of each grid point.
    
%% Create the figure, axes, listboxes, and buttons.
set(0,'units','inches');                                                    %Set the system units to inches.
pos = get(0,'ScreenSize');                                                  %Grab the screensize.
w = 9;                                                                      %Set the figure width, in inches.
h = 8;                                                                      %Set the figure height, in inches.
m = 0.35;                                                                   %Set the margin for the axes, in inches.
pos = [pos(3)/2 - w/2, pos(4)/2 - h/2, w, h];                               %Set the figure position.
handles.fig = figure(1);                                                    %Take control of figure 1 if it exists, create it if it doesn't.
set(handles.fig,'units','inches',...
    'Position',pos,...
    'MenuBar','none',...
    'name','Pasta Matrix Scoring',...
    'numbertitle','off',...
    'PaperPositionMode','auto');                                            %Set the properties of the figure.
handles.clearbutton = uicontrol(handles.fig,'style','pushbutton',...
    'string','CLEAR ALL',...
    'units','inches',...
    'position',[0.1, 0.65, w - 0.2, 0.35],...
    'enable','off',...
    'fontweight','bold',...
    'fontsize',14,...
    'callback',@Pasta_Matrix_Clear_All);                                                  %Make a button for clearing all checks.
handles.axes = axes('units','inches',...
    'parent',handles.fig,...
    'position',[m, 0.95 + m, w - 2*m, h - 1.8 - 2*m],...
    'gridlinestyle',':',...
    'xlim',[0, num_columns],...
    'ylim',[0, num_rows],...
    'xdir','reverse',...
    'xtick',0:1:num_columns,...
    'ytick',0:1:num_rows,...
    'box','on',...
    'xgrid','on',...
    'ygrid','on',...
    'xticklabel',[],...
    'yticklabel',[]);                                                       %Create an axes object for plotting the grid.
row_txt = nan(num_rows,2);                                                  %Create a matrix to hold row label text objects.
for i = 1:num_rows                                                          %Step through the rows...
    row_txt(i,1) = text(0,i-0.5,[' ' char(64+i)],...
        'horizontalalignment','left',...
        'verticalalignment','middle',...
        'fontweight','bold',...
        'fontsize',12,...
        'parent',handles.axes);                                             %Create right-hand row labels.
    row_txt(i,2) = text(num_columns,i-0.5,[char(64+i) ' '],...
        'horizontalalignment','right',...
        'verticalalignment','middle',...
        'fontweight','bold',...
        'fontsize',12,...
        'parent',handles.axes);                                             %Create left-hand row labels.
end
column_txt = nan(num_columns,2);                                            %Create a matrix to hold column label text objects.
for i = 1:num_columns                                                       %Step through the rows...
    c = abs(i - ceil(num_columns/2));                                       %Calculate the column number.
    column_txt(i,1) = text(i-0.5,0,num2str(c),...
        'horizontalalignment','center',...
        'verticalalignment','top',...
        'fontweight','bold',...
        'fontsize',12,...
        'parent',handles.axes);                                             %Create right-hand row labels.
    column_txt(i,2) = text(i-0.5,num_rows,num2str(c),...
        'horizontalalignment','center',...
        'verticalalignment','bottom',...
        'fontweight','bold',...
        'fontsize',12,...
        'parent',handles.axes);                                             %Create left-hand row labels.
end
x = 0.15*cos(0:pi/50:2*pi);                                                 %Create x-coordinates for a circle.
y = 0.15*sin(0:pi/50:2*pi);                                                 %Create y-coordinates for a circle.
for j = 1:num_rows                                                          %Step through the rows.
    for i = 1:num_columns                                                   %Step through the columns...
        ln = line(i + x - 0.5, j + y - 0.5,...
            'color',0.7*[1 1 1],...
            'linewidth',2,...
            'userdata',[0,j,i],...
            'parent',handles.axes);                                         %Draw a circle to show each pasta location.
        if rem(j,5) == 0 || rem(i+2,5) == 0                                 %If this row or column is a multiple of five...
            set(ln,'color',0.4*[1 1 1]);                                    %Make the circle slightly darker.
        end
    end
end
uicontrol(handles.fig,'style','edit',...
    'units','inches',...
    'position',[0.1,h - 0.45, 1.10, 0.35],...
    'enable','inactive',...
    'string','SUBJECT:',...
    'horizontalalignment','right',...
    'fontsize',14,...
    'fontweight','bold',...
    'backgroundcolor',[0.7 0.7 1]);                                         %Create a static rat label.
handles.editrat = uicontrol(handles.fig,'style','edit',...
    'units','inches',...
    'position',[1.21,h - 0.45, w/2 - 1.26, 0.35],...
    'string',' ',...
    'horizontalalignment','center',...
    'fontsize',14,...
    'fontweight','bold',...
    'callback',@Pasta_Matrix_Edit_Subject);                                                   %Create a rat name editbox.
handles.rat = [];                                                           %Set the rat name to an empty field.
uicontrol(handles.fig,'style','edit',...
    'units','inches',...
    'position',[w/2 + 0.05,h - 0.45, 0.75, 0.35],...
    'enable','inactive',...
    'string','DATE:',...
    'horizontalalignment','right',...
    'fontsize',14,...
    'fontweight','bold',...
    'backgroundcolor',[0.7 0.7 1]);                                         %Create a static date label.
handles.editdate = uicontrol(handles.fig,'style','edit',...
    'units','inches',...
    'position',[w/2 + 0.81,h - 0.45, w/2 - 0.91, 0.35],...
    'string',datestr(now,'mm/dd/yyyy'),...
    'horizontalalignment','center',...
    'fontsize',14,...
    'fontweight','bold',...
    'callback',@Pasta_Matrix_Edit_Date);                                                  %Create a date editbox.
handles.date = fix(now);                                                    %Set the date to the current date.
uicontrol(handles.fig,'style','edit',...
    'units','inches',...
    'position',[0.1,h - 0.85, 1.10, 0.35],...
    'enable','inactive',...
    'string','TIME:',...
    'horizontalalignment','right',...
    'fontsize',14,...
    'fontweight','bold',...
    'backgroundcolor',[0.7 0.7 1]);                                         %Create a static time label.
handles.edittime = uicontrol(handles.fig,'style','edit',...
    'units','inches',...
    'position',[1.21,h - 0.85, w/2 - 1.26, 0.35],...
    'string',datestr(now,'HH:MM'),...
    'horizontalalignment','center',...
    'fontsize',14,...
    'fontweight','bold',...
    'callback',@Pasta_Matrix_Edit_Time);                                                  %Create a time editbox.
handles.time = now - fix(now);                                              %Set the time to the current time.
handles.savebutton = uicontrol(handles.fig,'style','pushbutton',...
    'string','SAVE GRID',...
    'units','inches',...
    'position',[w/2 + 0.05,h - 0.85, w/2 - 0.15, 0.35],...
    'enable','off',...
    'fontweight','bold',...
    'fontsize',14,...
    'callback',@Pasta_Matrix_Save_Data);                                                  %Make a button for saving the data.
p = uipanel('parent',handles.fig,...
    'units','inches',...
    'position',[0.1, 0.1, w - 0.2, 0.45]);                                  %Create a panel to house the analysis buttons.
uicontrol(p,'style','edit',...
    'string','Analysis:',...
    'units','normalized',...
    'position',[0.01, 0.111, 0.12, 0.7778],...
    'fontweight','bold',...
    'enable','inactive',...
    'backgroundcolor',[0.7 1 0.7],...
    'fontsize',14);                                                         %Make a button for esporting population data to a TSV file.
uicontrol(p,'style','pushbutton',...
    'string','Population Data to TSV',...
    'units','normalized',...
    'position',[0.14, 0.111, 0.42, 0.7778],...
    'enable','on',...
    'fontweight','bold',...
    'fontsize',14,...
    'callback',{@Pasta_Matrix_PopData_to_TSV,handles.savepath});            %Make a button for esporting population data to a TSV file.
uicontrol(p,'style','pushbutton',...
    'string','Timeline Plots',...
    'units','normalized',...
    'position',[0.57, 0.111, 0.42, 0.7778],...
    'enable','off',...
    'fontweight','bold',...
    'fontsize',14);                                                         %Make a button for exporting population data to a TSV file.
guidata(handles.fig,handles);                                               %Pin the handles structure to the GUI.
set(handles.fig,'WindowButtonDownFcn',@Pasta_Matrix_Button_Down,...
    'WindowButtonMotionFcn',...
    {@Pasta_Matrix_Mouse_Hover,handles.axes,row_txt,column_txt});           %Set the window button down and button motion function.